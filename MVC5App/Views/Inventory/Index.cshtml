@model MVC5App.Models.InventoryChangeViewModel
@using MVC5App.Models

@{
    ViewBag.Title = "Inventory";

    var categories = new Dictionary<int, string>();
    var inventory = new Dictionary<int, InventoryViewModel>();
    var currentCategory = 0;
    // connect to SQL
    using (var sql = new Tools.OurSql())
    {
        // query inventory categories and populate dictionary
        var rdr = sql.Query("SELECT Id, Name " +
                            "FROM InventoryCategory");
        while (rdr.Read())
        {
            categories[rdr.GetInt32(0)] = rdr.GetString(1);
        }

        int.TryParse(ViewData["category"].ToString(), out currentCategory);

        rdr.Close();
        if (currentCategory == 0)
        {
            rdr = sql.Query("SELECT Id, Category, Description, Stock " +
                            "FROM Inventory");
        }
        else
        {
            rdr = sql.Query("SELECT Id, Category, Description, Stock " +
                            "FROM Inventory " +
                            "WHERE Category = " + currentCategory);
        }

        while (rdr.Read())
        {
            var item = new InventoryViewModel();
            item.Id = rdr.GetInt32(0);
            item.Category = rdr.GetInt32(1);
            item.Description = rdr.GetString(2);
            item.Stock = rdr.GetInt32(3);
            inventory[item.Id] = item;
        }
    }

    var categoryItems = categories.Select(f => new SelectListItem
    {
        Value = f.Key + "",
        Text = f.Value
    });
}

<h1 class="col-md-9">Inventory</h1>

<main role="main" class="col-md-9 ml-sm-auto col-lg-10 pt-3 px-4">

    <div>
        <div style="float: left">
            <ul class="nav flex-column">
                <li class="nav-item">
                    @{
                        var catClass = (currentCategory == 0) ? "nav-current" : "";
                        <a class="@catClass" href="@Url.Content("?category=" + 0)">All</a>
                    }
                </li>
            </ul>
        </div>
        @{
            foreach (var categoryId in categories.Keys)
            {
                <div style="float: left">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            @{
                                var catClass2 = (currentCategory == categoryId) ? "nav-current" : "";
                                <a class="@catClass2" href="@Url.Content("?category=" + categoryId)">@categories[categoryId]</a>
                            }
                        </li>
                    </ul>
                </div>
            }
        }
        <div style="clear:both"></div>
    </div>

    <div class="table-responsive top-margin">
        <table class="table table-striped table-sm">
            <col style="width:20%">
            <col style="width:30%">
            <col style="width:30%">
            <col style="width:20%">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Category</th>
                    <th>Description</th>
                    <th>Stock</th>
                </tr>
            </thead>
            <tbody>
                @{
                    // display a table of values for the month
                    // allow the values to be altered by clicking them
                    foreach (var item in inventory.Values)
                    {
                        var key = item.Id;
                        var actionName = this.ViewContext.RouteData.Values["action"].ToString();
                        var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
                        <tr>
                            <td>
                                <a onclick="alter('@key', '@item.Id', 'id')" href="#edit" id="@key-id-display">@item.Id</a>
                                @using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post, new { @id = @key + "-id-alter", @style = "display:none" }))
                                {
                                    @Html.TextBoxFor(m => m.Id, new { @class = "forminput", @Value = @item.Id })
                                    @Html.TextBoxFor(m => m.OriginalId, new { @style = "display:none", @Value = @key })
                                    @Html.TextBoxFor(m => m.Category, new { @style = "display:none", @Value = @item.Category })
                                    @Html.TextBoxFor(m => m.Description, new { @style = "display:none", @Value = @item.Description })
                                    @Html.TextBoxFor(m => m.Stock, new { @style = "display:none", @Value = @item.Stock })
                                    @Html.TextBoxFor(m => m.ViewingCategory, new { @style = "display:none", @Value = @currentCategory })
                                    <input class="forminput formsubmit" type="submit" value="Save" />
                                }
                            </td>
                            <td>
                                <a onclick="alter('@key', '@item.Category', 'category')" href="#edit" id="@key-category-display">@categories[item.Category]</a>
                                @using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post, new { @id = @key + "-category-alter", @style = "display:none" }))
                                {
                                    @Html.DropDownListFor(m => m.Category, categoryItems, new { @class = "forminput", @style = "width:50%" });
                                    @Html.TextBoxFor(m => m.OriginalId, new { @style = "display:none", @Value = @key })
                                    @Html.TextBoxFor(m => m.Id, new { @style = "display:none", @Value = @key })
                                    @Html.TextBoxFor(m => m.Description, new { @style = "display:none", @Value = @item.Description })
                                    @Html.TextBoxFor(m => m.Stock, new { @style = "display:none", @Value = @item.Stock })
                                    @Html.TextBoxFor(m => m.ViewingCategory, new { @style = "display:none", @Value = @currentCategory })
                                    <input class="forminput formsubmit" type="submit" value="Save" />
                                }
                            </td>
                            <td>
                                <a onclick="alter('@key', '@item.Description', 'description')" href="#edit" id="@key-description-display">@item.Description</a>
                                @using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post, new { @id = @key + "-description-alter", @style = "display:none" }))
                                {
                                    @Html.TextBoxFor(m => m.Description, new { @class = "forminput", @Value = @item.Description, @style="width:70%" })
                                    @Html.TextBoxFor(m => m.OriginalId, new { @style = "display:none", @Value = @key })
                                    @Html.TextBoxFor(m => m.Id, new { @style = "display:none", @Value = @key })
                                    @Html.TextBoxFor(m => m.Category, new { @style = "display:none", @Value = @item.Category })
                                    @Html.TextBoxFor(m => m.Stock, new { @style = "display:none", @Value = @item.Stock })
                                    @Html.TextBoxFor(m => m.ViewingCategory, new { @style = "display:none", @Value = @currentCategory })
                                    <input class="forminput formsubmit" type="submit" value="Save" />
                                }
                            </td>
                            <td>
                                <a onclick="alter('@key', '@item.Stock', 'stock')" href="#edit" id="@key-stock-display">@item.Stock</a>
                                @using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post, new { @id = @key + "-stock-alter", @style = "display:none" }))
                                {
                                    @Html.TextBoxFor(m => m.Stock, new { @class = "forminput", @Value = @item.Stock })
                                    @Html.TextBoxFor(m => m.OriginalId, new { @style = "display:none", @Value = @key })
                                    @Html.TextBoxFor(m => m.Id, new { @style = "display:none", @Value = @key })
                                    @Html.TextBoxFor(m => m.Category, new { @style = "display:none", @Value = @item.Category })
                                    @Html.TextBoxFor(m => m.Description, new { @style = "display:none", @Value = @item.Description })
                                    @Html.TextBoxFor(m => m.ViewingCategory, new { @style = "display:none", @Value = @currentCategory })
                                    <input class="forminput formsubmit" type="submit" value="Save" />
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</main>
