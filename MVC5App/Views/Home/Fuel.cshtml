@{
    ViewBag.Title = "Fuel";
}


<main role="main" class="col-md-9 ml-sm-auto col-lg-10 pt-3 px-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
        <h1 class="h2">Fuel Inventory</h1>
    </div>

    <canvas class="my-4" id="myChart" width="900" height="380"></canvas>

    <div class="table-responsive">
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                @{
                    // remember fuel inventory and use it for the graph
                    List<Tuple<DateTime, Decimal>> fuelInventory = new List<Tuple<DateTime, Decimal>>();

                    // connect to SQL
                    using (var sql = new Tools.OurSql())
                    {
                        // query fuel inventory
                        var rdr = sql.Query("SELECT OnDate, FuelAmount FROM FuelInventory");
                        while (rdr.Read())
                        {
                            // read item
                            var item = new Tuple<DateTime, Decimal>(rdr.GetDateTime(0), rdr.GetDecimal(1));
                            <tr>
                                <th>@item.Item1.ToString("yyyy-MM-dd")</th>
                                <th>@item.Item2</th>
                            </tr>
                            // remember fuel inventory for graph
                            fuelInventory.Add(item);
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</main>



<!-- Graphs -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
<script>
    var ctx = document.getElementById("myChart");
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: [
                @{
                    // output the day of the week label for each item
                    foreach (var item in fuelInventory)
                    {
                        // note: using Html.Raw so it will properly output a quote for javascript
                        @Html.Raw("'" + item.Item1.DayOfWeek + "',")
                    }
                }
            ],
            datasets: [{
                data: [
                    @{
                        // output the value of each day to draw the graph
                        foreach (var item in fuelInventory)
                        {
                            @(item.Item2 + ",")
                        }
                    }
                ],
                lineTension: 0,
                backgroundColor: 'transparent',
                borderColor: '#007bff',
                borderWidth: 4,
                pointBackgroundColor: '#007bff'
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: false
                    }
                }]
            },
            legend: {
                display: false,
            }
        }
    });
</script>
