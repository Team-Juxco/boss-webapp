@model MVC5App.Models.RestaurantInventoryViewModel
@using MVC5App.Models

@{
    ViewBag.Title = "Restaurant Inventory";

    var categories = new Dictionary<int, string>();
    var inventory = new SortedDictionary<string, RestaurantInventoryViewModel>();
    // connect to SQL
    using (var sql = new Tools.OurSql())
    {
        var rdr = sql.Query("SELECT Id, Item, Cost, SoldFor, AmountSold " +
                        "FROM RestaurantInventory");

        while (rdr.Read())
        {
            var item = new RestaurantInventoryViewModel();
            item.Id = rdr.GetInt32(0);
            item.Item = rdr.GetString(1);
            item.Cost = rdr.GetDecimal(2);
            item.SoldFor = rdr.GetDecimal(3);
            item.AmountSold = rdr.GetInt32(4);

            string key = item.Item + item.Id;
            if (ViewData["sort"] != null)
            {
                switch (ViewData["sort"].ToString())
                {
                    case "id":
                        key = item.Id + "";
                        break;
                    case "item":
                        key = item.Item + "" + item.Id;
                        break;
                    case "cost":
                        key = (1000000 + item.Cost) + item.Item + "" + item.Id;
                        break;
                    case "soldfor":
                        key = (1000000 + item.SoldFor) + item.Item + "" + item.Id;
                        break;
                    case "amountsold":
                        key = (1000000 + item.AmountSold) + item.Item + "" + item.Id;
                        break;
                }
            }

            inventory[key] = item;
        }
    }
    
    var categoryItems = categories.Select(f => new SelectListItem
    {
        Value = f.Key + "",
        Text = f.Value
    });

    var actionName = this.ViewContext.RouteData.Values["action"].ToString();
    var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
}

<h1 class="col-md-9">Restaurant Inventory</h1>

<main role="main" class="col-md-9 ml-sm-auto col-lg-10 pt-3 px-4">
    <div class="table-responsive top-margin">
        <table class="table table-striped table-sm">
            <col style="width:34%">
            <col style="width:22%">
            <col style="width:22%">
            <col style="width:22%">
            <thead>
                <tr>
                    <th><a href="?sort=item">Item</a></th>
                    <th><a href="?sort=cost">Cost</a></th>
                    <th><a href="?sort=soldfor">Sold For</a></th>
                    <th><a href="?sort=amountsold">Amount Sold</a></th>
                </tr>
            </thead>
            <tbody>
                @{
                    // display a table of values for the month
                    // allow the values to be altered by clicking them
                    foreach (var item in inventory.Values)
                    {
                        var key = item.Id;
                        <tr>
                            <td>
                                <a onclick="alter('@key', '@item.Item', 'item')" href="#edit" id="@key-item-display">@item.Item</a>
                                @using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post, new { @id = @key + "-item-alter", @style = "display:none" }))
                                {
                                    @Html.TextBoxFor(m => m.Item, new { @class = "forminput", @Value = @item.Item })
                                    @Html.TextBoxFor(m => m.Id, new { @style = "display:none", @Value = item.Id })
                                    @Html.TextBoxFor(m => m.Cost, new { @style = "display:none", @Value = item.Cost })
                                    @Html.TextBoxFor(m => m.SoldFor, new { @style = "display:none", @Value = item.SoldFor })
                                    @Html.TextBoxFor(m => m.AmountSold, new { @style = "display:none", @Value = item.AmountSold })
                                    <input class="forminput formsubmit" type="submit" value="Save" />
                                }
                            </td>
                            <td>
                                <a onclick="alter('@key', '@string.Format("{0:F2}", item.Cost)', 'cost')" href="#edit" id="@key-cost-display">@string.Format("${0:F2}", item.Cost)</a>
                                @using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post, new { @id = @key + "-cost-alter", @style = "display:none" }))
                                {
                                    @Html.TextBoxFor(m => m.Cost, new { @class = "forminput", @Value = @item.Cost })
                                    @Html.TextBoxFor(m => m.Id, new { @style = "display:none", @Value = item.Id })
                                    @Html.TextBoxFor(m => m.Item, new { @style = "display:none", @Value = item.Item })
                                    @Html.TextBoxFor(m => m.SoldFor, new { @style = "display:none", @Value = item.SoldFor })
                                    @Html.TextBoxFor(m => m.AmountSold, new { @style = "display:none", @Value = item.AmountSold })
                                    <input class="forminput formsubmit" type="submit" value="Save" />
                                }
                            </td>
                            <td>
                                <a onclick="alter('@key', '@string.Format("{0:F2}", item.SoldFor)', 'soldfor')" href="#edit" id="@key-soldfor-display">@string.Format("${0:F2}", item.SoldFor)</a>
                                @using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post, new { @id = @key + "-soldfor-alter", @style = "display:none" }))
                                {
                                    @Html.TextBoxFor(m => m.SoldFor, new { @class = "forminput", @Value = @item.SoldFor })
                                    @Html.TextBoxFor(m => m.Id, new { @style = "display:none", @Value = item.Id })
                                    @Html.TextBoxFor(m => m.Item, new { @style = "display:none", @Value = item.Item })
                                    @Html.TextBoxFor(m => m.Cost, new { @style = "display:none", @Value = item.Cost })
                                    @Html.TextBoxFor(m => m.AmountSold, new { @style = "display:none", @Value = item.AmountSold })
                                    <input class="forminput formsubmit" type="submit" value="Save" />
                                }
                            </td>
                            <td>
                                <a onclick="alter('@key', '@item.AmountSold', 'amountsold')" href="#edit" id="@key-amountsold-display">@item.AmountSold</a>
                                @using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post, new { @id = @key + "-amountsold-alter", @style = "display:none" }))
                                {
                                    @Html.TextBoxFor(m => m.AmountSold, new { @class = "forminput", @Value = @item.AmountSold })
                                    @Html.TextBoxFor(m => m.Id, new { @style = "display:none", @Value = item.Id })
                                    @Html.TextBoxFor(m => m.Cost, new { @style = "display:none", @Value = item.Cost })
                                    @Html.TextBoxFor(m => m.SoldFor, new { @style = "display:none", @Value = item.SoldFor })
                                    @Html.TextBoxFor(m => m.Item, new { @style = "display:none", @Value = item.Item })
                                    <input class="forminput formsubmit" type="submit" value="Save" />
                                }
                            </td>
                        </tr>
                    }
                    using (Html.BeginForm(actionName + "/", controllerName, FormMethod.Post))
                    {
                        <tr class="insert-alter" style="display:none">
                            <td>
                                @Html.TextBoxFor(m => m.Id, new { @style = "display:none", @Value = "-1" })
                                @Html.TextBoxFor(m => m.Item, new { @class = "forminput", @style = "width:100%" })
                            </td>
                            <td>@Html.TextBoxFor(m => m.Cost, new { @class = "forminput", @style = "width:100%" })</td>
                            <td>@Html.TextBoxFor(m => m.SoldFor, new { @class = "forminput", @style = "width:100%" })</td>
                            <td>@Html.TextBoxFor(m => m.AmountSold, new { @class = "forminput", @style = "width:100%" })</td>
                        </tr>
                        <tr class="insert-alter" style="display:none">
                            <td></td>
                            <td></td>
                            <td></td>
                            <td><input class="forminput formsubmit" type="submit" value="Save" style="float:right" /></td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <div style="float: right">
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a id="insert-button" href="#insert" onclick="alterInsert()">Insert</a>
                </li>
            </ul>
        </div>

    </div>
</main>
